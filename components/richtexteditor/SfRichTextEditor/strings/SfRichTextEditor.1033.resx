<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root"
    xmlns=""
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>

  <!-- RichTextEditor Control properties -->
  <data name="SfRichTextEditor" xml:space="preserve">
    <value>SfRichTextEditor (28.1.33) Preview</value>
  </data>
  <data name="SfRichTextEditor_Desc_Key" xml:space="preserve">
    <value>SfRichTextEditorComponent is a configurable RichTextEditor that displays formatted data.</value>
  </data>

  <!-- RichTextEditor Properties -->
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="Value_Desc_Key" xml:space="preserve">
    <value>Specifies the value displayed in the RichTextEditor's content area and it should be string.</value>
  </data>
  <data name="EnableDarkMode" xml:space="preserve">
    <value>Enable Dark Mode</value>
  </data>
  <data name="EnableDarkMode_Desc_Key" xml:space="preserve">
    <value>Toggle this option to switch the application interface to Dark Mode</value>
  </data>
  <data name="RTEConfig" xml:space="preserve">
    <value>RTEConfig</value>
  </data>
  <data name="RTEConfig_Desc_Key" xml:space="preserve">
    <value>The configuration settings for the RichTextEditor component allow you to customize its features and behavior. For reference, you can find the default configuration in the JSON file located in the "components/richtexteditor/data" folder in the repository.</value>
  </data>
  <data name="CssClass" xml:space="preserve">
    <value>CSS Class</value>
  </data>
  <data name="CssClass_Desc_Key" xml:space="preserve">
    <value>Specifies the CSS class name appended with the root element of the RichTextEditor. One or more custom CSS classes can be added to a RichTextEditor.</value>
  </data>
  <data name="MaxLength" xml:space="preserve">
    <value>Max Length</value>
  </data>
  <data name="MaxLength_Desc_Key" xml:space="preserve">
    <value>Specifies the maximum number of characters allowed in the Rich Text Editor component.</value>
  </data>
  <data name="Placeholder" xml:space="preserve">
    <value>Placeholder</value>
  </data>
  <data name="Placeholder_Desc_Key" xml:space="preserve">
    <value>Specifies the placeholder for the RichTextEditorâ€™s content used when the Rich Text Editor body is empty.</value>
  </data>
  <data name="EnterKey" xml:space="preserve">
    <value>Enter Key</value>
  </data>
  <data name="EnterKey_Desc_Key" xml:space="preserve">
    <value>Specifies tag to be inserted when enter key is pressed.</value>
  </data>
  <data name="ShowCharCount" xml:space="preserve">
    <value>Show Char Count</value>
  </data>
  <data name="ShowCharCount_Desc_Key" xml:space="preserve">
    <value>Sets Boolean value to enable or disable the display of the character counter.</value>
  </data>
  <data name="EnableResize" xml:space="preserve">
    <value>Enable Resize</value>
  </data>
  <data name="EnableResize_Desc_Key" xml:space="preserve">
    <value>Enables or disables the resizing option in the editor. If enabled, the Rich Text Editor can be resized by dragging the resize icon in the bottom right corner.</value>
  </data>
  <data name="EnableXhtml" xml:space="preserve">
    <value>Enable Xhtml</value>
  </data>
  <data name="EnableXhtml_Desc_Key" xml:space="preserve">
    <value>Specifies a value that indicates whether the xhtml is enabled or not.</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="Enabled_Desc_Key" xml:space="preserve">
    <value>Specifies a value that indicates whether the component is enabled or not.</value>
  </data>

  <!-- RichTextEditor Event Properties -->
  <data name="EventName" xml:space="preserve">
    <value>Event Name</value>
  </data>
  <data name="EventName_Desc_Key" xml:space="preserve">
    <value>Output event name when OnChange is triggered.</value>
  </data>
  <data name="OnError" xml:space="preserve">
    <value>OnError</value>
  </data>
  <data name="OnError_Desc_Key" xml:space="preserve">
    <value>Outputs error message when onError is triggered.</value>
  </data>
</root>